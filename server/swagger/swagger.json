{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Funtooler",
    "description": "Funtooler User Service"
  },
  "host": "localhost:9000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/delete/deleteAll": {
      "delete": {
        "summary": "Delete all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/me/{userId}": {
      "get": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "string"
          }
        ],
        "tags": [
          "Signup"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },

    "/users/create": {
      "post": {
        "tags": [
          "Signup"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Signup"
        ],
        "description": "Login user",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "description": "Login user",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Logged in",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/userExists": {
      "post": {
        "tags": [
          "Signup"
        ],
        "description": "User Exists",
        "parameters": [
          {
            "name": "User Exists",
            "in": "body",
            "description": "User Exists",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User doesn't exists",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },

    "/users/verifyOtp": {
      "post": {
        "tags": [
          "Otp"
        ],
        "description": "Verify otp sent to Device",
        "parameters": [
          {
            "name": "otp",
            "in": "body",
            "description": "Otp that we want to verify",
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Otp is Verified",
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        }
      }
    },

    "/users/createOtp": {
      "post": {
        "tags": [
          "Otp"
        ],
        "description": "Otp sent to Device",
        "parameters": [
          {
            "name": "otp",
            "in": "body",
            "description": "Otp that we want to verify",
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Otp Created",
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        }
      }
    },

    "/users/resendOtp": {
      "post": {
        "tags": [
          "Otp"
        ],
        "description": "Otp sent to Device",
        "parameters": [
          {
            "name": "otp",
            "in": "body",
            "description": "Otp that we want to verify",
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Otp Resent",
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        }
      }
    },

    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "fullName": {
          "type": "string"
        }
        ,
        "email": {
          "type": "string"
        }
        ,
        "password": {
          "type": "string"
        }
        ,
        "fbToken": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "googleId": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "googleToken": {
          "type": "string"
        },
        "pincode": {
          "type": "string"
        },
        "fbId": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "school": {
            "type": "object",
            "properties":{
            "schoolName":{
              "type": "string"
            },
            "schoolePincode":{
              "type": "string"
            },
            "class":{
              "type": "string"
            }
            ,
            "section":{
              "type": "string"
            }
            ,
            "state":{
              "type": "string"
            }
          }
        },
        "college": {
          "type": "object",
          "properties":{
          "collegeName":{
            "type": "string"
          },
          "course":{
            "type": "string"
          },
          "admissionYear":{
            "type": "string"
          }
          ,
          "class":{
            "type": "string"
          }
        }
      }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Login": {
      "required": [
        "email",
        "password",
        "fbToken",
        "googleToken"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
        ,
        "password": {
          "type": "string"
        }
        ,
        "fbToken": {
          "type": "string"
        }
        ,
        "googleToken": {
          "type": "string"
        }
        
      }
    },
    "Otp": {
      "required": [
        "_id",
        "otp",
        "phone"
      ],
      "properties": {
        "otp": {
          "type": "string"
        }
        ,
        "phone": {
          "type": "string"
        }
        
      }
    }
  }
}

